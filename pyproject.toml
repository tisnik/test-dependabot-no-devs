[tool.ruff]

# description of all rules are available on https://docs.astral.sh/ruff/rules/
lint.select = ["D", "E", "F", "W", "C", "S", "I", "TCH", "SLOT", "RUF", "C90", "N"]

# we need to check 'mood' of all docstrings, this needs to be enabled explicitly
lint.extend-select = ["D401"]

lint.ignore = []

target-version = "py311"
lint.pydocstyle.convention = "google"
line-length = 100
lint.flake8-pytest-style.fixture-parentheses = false

[tool.coverage.report]
# unit tests fails if the total coverage measurement is under this threshold value
fail_under = 90

[tool.mypy]
disable_error_code = ["union-attr", "return-value", "arg-type", "import-untyped"]
ignore_missing_imports = true

[tool.pdm]
distribution = false

[tool.pdm.dev-dependencies]
dev = [
]

[[tool.pdm.source]]
type = "find_links"
url = "https://download.pytorch.org/whl/cpu/torch_stable.html"
name = "torch"

[project]
name = "ols"
version = "0.1.0"
description = "OpenShift LightSpeed is an AI powered assistant that runs on OpenShift and provides answers to product questions using backend LLM services."
authors = []
dependencies = [
    "torch==2.2.0+cpu",
    "fastapi==0.110.1",
    "gradio==4.25.0",
    "langchain==0.1.14",
    "llama-index==0.10.27",  # dev dep?
    "uvicorn==0.29.0",
    "redis==5.0.3",
    "faiss-cpu==1.8.0",
    "sentence-transformers==2.6.1",
    "openai==1.16.1",
    "ibm-watson-machine-learning==1.0.353",
    "ibm-generative-ai==2.3.0",
    "langchain-openai==0.1.1",
    "pydantic==2.6.4",
    "setuptools>=69.0.3",
    "prometheus-client>=0.19.0",
    "kubernetes>=29.0.0",
    "pytest-asyncio>=0.23.5",
    "spacy>=3.7.4",
    "black>=24.2.0",
    "httpx>=0.26.0",
    "mypy>=1.8.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest_asyncio>=0.23.5",
    "ruff>=0.3.4",
    # types-requests<2.31.0.20240404 to avoid upgrading urllib3>1.27 that breaks ibm-cos-sdk-core 2.13.
    # todo: remove when ibm-cos-sdk-core does not depend on urllib3<1.27.
    "types-requests<2.31.0.20240404"
]
requires-python = "==3.11.*"
readme = "README.md"
license = "LICENSE"

[tool.pdm.scripts]
start = "pdm run make run"
test = "pdm run make test"
test-unit = "pdm run make test-unit"
test-integration = "pdm run make test-integration"
test-e2e = "pdm run make test-e2e"
